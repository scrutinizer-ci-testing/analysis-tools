checks:
    javascript: true
    php: true
    #python: true
    #ruby: true
build:
    environment:
        java: 'java-8-oracle'
        node: v6.2.0
        python: 3.5.0
        ruby: 2.2.0

    dependencies:    
            after:    # install plugins and dependencies, to support extend configuration in .eslintrc.json file.
                - 
                    command: npm install --prefix ~/.analysis/eslint eslint-config-standard
                    not_if: test -e ~/.analysis/eslint/node_modules/eslint-config-standard
                    
                - 
                    command: npm install --prefix ~/.analysis/eslint eslint-plugin-promise
                    not_if: test -e ~/.analysis/eslint/node_modules/eslint-plugin-promise
                    
                - 
                    command: npm install --prefix ~/.analysis/eslint eslint-plugin-standard
                    not_if: test -e ~/.analysis/eslint/node_modules/eslint-plugin-standard

    tests:
        override:
            -
                command: 'eslint-run ./eslint/lib -c ./eslint/eslintrc.json > eslint-data'  #path required
                analysis:
                    file: 'eslint-data'

            -   eslint-run ./eslint/lib -c ./eslint/eslintrc.json   #path required
                
            -
                command:   'shellcheck-run > shellcheck-data' 
                analysis:
                    file:   'shellcheck-data'
                  
            -   phpcs-run ./phpcs     #path required
            
            -
                command: 'phpcs-run ./phpcs --standard=./phpcs/ruleset.xml > phpcs-data' #path required
                analysis:
                    file: 'phpcs-data'           

            -    jshint-run ./jshint
              
            -
                command: 'jshint-run ./jshint --reporter=./jshint/reporter.js > jshint-data'
                analysis:
                    file: 'jshint-data'

            -   pylint-run ./pylint/custom.py # either project name or specfic file name


            -
                command: 'pylint-run ./pylint/custom.py --rcfile=./pylint/.pylintrc > pylint-data'
                analysis:
                    file: 'pylint-data'

            -   rubocop-run ./rubocop
           

            -
                command: 'rubocop-run ./rubocop --config=./rubocop/.rubocop.yml > rubocop-data'
                analysis:
                    file: 'rubocop-data'

            -   csslint-run ./csslint  #path required

            -
                command: 'csslint-run ./csslint --config=./csslint/.csslintrc > csslint-data'
                analysis:
                    file: 'csslint-data'

            -   scss-lint-run ./scsslint

            -
                command: 'scss-lint-run ./scsslint --config=./scsslint/.scss-lint.yml > scsslint-data'
                analysis:
                    file: 'scsslint-data'
            
            -   cd ~/build/scalastyle/commandline && scalastyle-run .

            -   cd ~/build/scalastyle/sbt && scalastyle-run
            
            -   cd ~/build/bundler-audit && bundle-audit-run #required Gemfile.lock in current directory

            -
                command: ' cd ~/build/java-analysistools-testing/ && mvn findbugs:findbugs '
                analysis:
                    file: 'java-analysistools-testing/target/findbugsXml.xml'
                    format: 'findbugs-xml'

            -
                command: ' cd ~/build/java-analysistools-testing/ && ant findbugs '
                analysis:
                    file: 'java-analysistools-testing/report/findbugs/findbugsXml.xml'
                    format: 'findbugs-xml'

            -
                command: ' cd ~/build/java-analysistools-testing/ && ant checkstyle '
                analysis:
                    file: 'java-analysistools-testing/report/checkstyle/checkstyle-result.xml'
                    format: 'general-checkstyle'

            -
                command: ' cd ~/build/java-analysistools-testing/ && mvn checkstyle:checkstyle '
                analysis:
                    file: 'java-analysistools-testing/target/checkstyle-result.xml'
                    format: 'general-checkstyle'

            -
                command: ' cd ~/build/java-analysistools-testing/ && mvn pmd:pmd '
                analysis:
                    file: 'java-analysistools-testing/target/pmd/pmd.xml'
                    format: 'pmd-xml'

            -
                command: ' cd ~/build/java-analysistools-testing/ && ant pmd '
                analysis:
                    file: 'java-analysistools-testing/report/pmd/pmd-result.xml'
                    format: 'pmd-xml'
